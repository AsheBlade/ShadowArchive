I"<h2 id="overview">Overview</h2>

<p>递归这一块始终是我不善于的一个难点. 这一部分需要多刷和多练, 并且死记硬背一些定式.<br />
在此收录一些典型题和难题.</p>

<h2 id="number-of-islands-lc_200">Number of Islands LC_200</h2>
<p><strong>Description</strong></p>

<p>Given a 2d grid map of ‘1’s (land) and ‘0’s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>

<p>Example 1:</p>
<blockquote>
  <p>Input: grid = [<br />
  [“1”,”1”,”1”,”1”,”0”],<br />
  [“1”,”1”,”0”,”1”,”0”],<br />
  [“1”,”1”,”0”,”0”,”0”],<br />
  [“0”,”0”,”0”,”0”,”0”]<br />
]<br />
Output: 1</p>
</blockquote>

<p>Example 2:</p>
<blockquote>
  <p>Input: grid = [<br />
  [“1”,”1”,”0”,”0”,”0”],<br />
  [“1”,”1”,”0”,”0”,”0”],<br />
  [“0”,”0”,”1”,”0”,”0”],<br />
  [“0”,”0”,”0”,”1”,”1”]<br />
]<br />
Output: 3</p>
</blockquote>

<p><strong>Solution</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    
    <span class="kt">char</span><span class="o">[][]</span> <span class="n">island</span><span class="o">;</span>
    
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">numIslands</span><span class="o">(</span><span class="kt">char</span><span class="o">[][]</span> <span class="n">grid</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
        <span class="k">this</span><span class="o">.</span><span class="na">island</span> <span class="o">=</span> <span class="n">grid</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">island</span> <span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">island</span> <span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++){</span>
                <span class="cm">/*find a cell belong to an island, then disappear the whole 
                  island and increase count*/</span>
                <span class="k">if</span><span class="o">(</span><span class="n">island</span> <span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="sc">'1'</span><span class="o">){</span>
                    <span class="n">disappear</span><span class="o">(</span><span class="n">i</span><span class="o">,</span><span class="n">j</span><span class="o">);</span>
                    <span class="n">count</span><span class="o">++;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">count</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="c1">//Use for disapearing an island</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">disappear</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">){</span>
        <span class="c1">//array edge detect</span>
        <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">island</span> <span class="o">.</span><span class="na">length</span><span class="o">){</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="n">island</span> <span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">){</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="c1">//island edge detect</span>
        <span class="k">if</span><span class="o">(</span><span class="n">island</span> <span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="sc">'0'</span><span class="o">){</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="c1">//disapear this cell</span>
        <span class="n">island</span> <span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="sc">'0'</span><span class="o">;</span>
        <span class="c1">//disapear other cell in the same island</span>
        <span class="n">disappear</span><span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">j</span><span class="o">);</span>
        <span class="n">disappear</span><span class="o">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">,</span> <span class="n">j</span><span class="o">);</span>
        <span class="n">disappear</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
        <span class="n">disappear</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET